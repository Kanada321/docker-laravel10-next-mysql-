server {
    # 基本設定
    listen 80 default;
    server_name localhost;

    # HTTPSへのリダイレクトを有効化（本番環境での適用を想定）
    # return 301 https://$host$request_uri;

    charset utf-8;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # ルートディレクトリとインデックスファイル
    root /var/www/application/public;
    index index.php index.html index.htm;

    # APIエンドポイント
    location /api {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # フロントエンドのプロキシ設定
    location / {
        proxy_pass http://next:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # PHPファイルの処理
    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass api:9000;
        fastcgi_index index.php;
        fastcgi_param FUEL_ENV "development";
        fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
        include fastcgi_params;
    }

    # 静的ファイルの処理
    #location ~* \.(css|js|gif|jpg|jpeg|png|svg|ico)$ {
    #    expires 30d;
    #    access_log off;
    #}

#        location /reploxy {
#            internal;
#            resolver 8.8.8.8;
#            set $reproxy $upstream_http_x_reproxy_url;
#            proxy_pass $reproxy;
#            proxy_set_header Authorization "";
#        }

# Next.js によって生成された静的ファイルやビルドアーティファクト用
#    location /_next/static/ {
#        root /var/www/next;
#        try_files $uri $uri/ =404;
#    }

    # エラーページの設定
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }

    # セキュリティヘッダーの追加
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'";
}

server {
    listen  443 ssl;

    server_name localhost;

  ### 証明書は、NGINX_SERVER_NAMEごとに作成してください。
  ssl_certificate /etc/ssl/certs/localhost.pem;
  ### 秘密鍵の設定
  ssl_certificate_key /etc/ssl/certs/localhost-key.pem;

    charset utf-8;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # ルートディレクトリとインデックスファイル
        root /var/www/application/public;
        index index.php index.html index.htm;

        # APIエンドポイント
        location /api {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        # フロントエンドのプロキシ設定
        location / {
            proxy_pass http://next:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # PHPファイルの処理
        location ~ \.php$ {
            try_files $uri /index.php =404;
            fastcgi_pass api:9000;
            fastcgi_index index.php;
            fastcgi_param FUEL_ENV "development";
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            include fastcgi_params;
        }

        # 静的ファイルの処理
        #location ~* \.(css|js|gif|jpg|jpeg|png|svg|ico)$ {
        #    expires 30d;
        #    access_log off;
        #}

        # エラーページの設定
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }

        # セキュリティヘッダーの追加
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'";
}
